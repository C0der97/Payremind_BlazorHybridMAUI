@page "/notifications"
@using PayRemind.Shared
@using static PayRemind.Components.Pages.Home
@inject NotificationServiceBd NotificationServiceBd
@inject SQLiteDatabaseService DatabaseService
@inject SharedStateService StateService
@implements IDisposable


@namespace PayRemind.Components.Pages


<h3 class="text-center">Lista de Notificaciones Pagadas</h3>


<div class="rz-p-4">
    @foreach (var item in notifications)
    {
        <div class="swipe-item rz-shadow-1 rz-mb-2">
            <RadzenCard class="rz-background-color-white">
                <h3>@item.Name</h3>
                <h5>@item.DateTime.ToString("yyyy-MM-dd hh:mm tt")</h5>
                @if (item.IsPaid)
                {
                    <h5>Estado: <strong>Pagado</strong> </h5>
                }
                else
                {
                    <h5>Estado: <strong>Sin Pagar</strong> </h5>
                }
            </RadzenCard>
        </div>
    }
</div>



@code {
    private List<NotificationData> notifications = new();
    private NotificationData selectedNotification = new();
    private bool? checkBoxValue;
    private List<SwipeItemNotification> Items = new List<SwipeItemNotification>();

    protected override async Task OnInitializedAsync()
    {
        await ReloadData();
        StateService.OnChange += StateHasChangedData;
    }

    async Task ReloadData()
    {
        notifications = await DatabaseService.GetNotificationsAsync(true);
    }

    async Task StateHasChangedData()
    {
        await ReloadData();
        StateHasChanged();
    }


    public void Dispose()
    {
        StateService.OnChange -= StateHasChangedData;
    }
}

